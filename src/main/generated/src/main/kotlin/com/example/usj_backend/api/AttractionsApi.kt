/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.10.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
*/
package com.example.usj_backend.api

import com.example.usj_backend.model.Attraction
import com.example.usj_backend.model.AttractionDetail
import io.swagger.v3.oas.annotations.*
import io.swagger.v3.oas.annotations.enums.*
import io.swagger.v3.oas.annotations.media.*
import io.swagger.v3.oas.annotations.responses.*
import io.swagger.v3.oas.annotations.security.*
import org.springframework.http.HttpStatus
import org.springframework.http.MediaType
import org.springframework.http.ResponseEntity

import org.springframework.web.bind.annotation.*
import org.springframework.validation.annotation.Validated
import org.springframework.web.context.request.NativeWebRequest
import org.springframework.beans.factory.annotation.Autowired

import jakarta.validation.constraints.DecimalMax
import jakarta.validation.constraints.DecimalMin
import jakarta.validation.constraints.Email
import jakarta.validation.constraints.Max
import jakarta.validation.constraints.Min
import jakarta.validation.constraints.NotNull
import jakarta.validation.constraints.Pattern
import jakarta.validation.constraints.Size
import jakarta.validation.Valid

import kotlin.collections.List
import kotlin.collections.Map

@RestController
@Validated
interface AttractionsApi {

    @Operation(
        tags = ["attractions",],
        summary = "アトラクション詳細取得",
        operationId = "apiAttractionsAttractionIdGet",
        description = """指定したアトラクションの詳細情報を取得します""",
        responses = [
            ApiResponse(responseCode = "200", description = "アトラクション詳細取得成功", content = [Content(schema = Schema(implementation = AttractionDetail::class))]),
            ApiResponse(responseCode = "404", description = "アトラクションが見つかりません")
        ],
        security = [ SecurityRequirement(name = "basicAuth"),SecurityRequirement(name = "bearerAuth") ]
    )
    @RequestMapping(
            method = [RequestMethod.GET],
            value = ["/api/attractions/{attractionId}"],
            produces = ["application/json"]
    )
    fun apiAttractionsAttractionIdGet(@Parameter(description = "", required = true) @PathVariable("attractionId") attractionId: kotlin.Long): ResponseEntity<AttractionDetail>

    @Operation(
        tags = ["attractions",],
        summary = "アトラクション一覧取得",
        operationId = "apiAttractionsGet",
        description = """USJのアトラクション一覧を取得します""",
        responses = [
            ApiResponse(responseCode = "200", description = "アトラクション一覧取得成功", content = [Content(array = ArraySchema(schema = Schema(implementation = Attraction::class)))])
        ],
        security = [ SecurityRequirement(name = "basicAuth"),SecurityRequirement(name = "bearerAuth") ]
    )
    @RequestMapping(
            method = [RequestMethod.GET],
            value = ["/api/attractions"],
            produces = ["application/json"]
    )
    fun apiAttractionsGet(@Parameter(description = "", schema = Schema(allowableValues = ["RIDE", "SHOW", "RESTAURANT", "SHOP", "OTHER"])) @Valid @RequestParam(value = "category", required = false) category: kotlin.String?,@Parameter(description = "", schema = Schema(allowableValues = ["HOLLYWOOD", "NEW_YORK", "SAN_FRANCISCO", "JURASSIC_PARK", "AMITY_VILLAGE", "WATERWORLD", "WIZARDING_WORLD", "MINION_PARK", "OTHER"])) @Valid @RequestParam(value = "area", required = false) area: kotlin.String?): ResponseEntity<List<Attraction>>
}
