/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.10.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
*/
package com.example.usj_backend.api

import com.example.usj_backend.model.Message
import com.example.usj_backend.model.SendMessageRequest
import io.swagger.v3.oas.annotations.*
import io.swagger.v3.oas.annotations.enums.*
import io.swagger.v3.oas.annotations.media.*
import io.swagger.v3.oas.annotations.responses.*
import io.swagger.v3.oas.annotations.security.*
import org.springframework.http.HttpStatus
import org.springframework.http.MediaType
import org.springframework.http.ResponseEntity

import org.springframework.web.bind.annotation.*
import org.springframework.validation.annotation.Validated
import org.springframework.web.context.request.NativeWebRequest
import org.springframework.beans.factory.annotation.Autowired

import jakarta.validation.constraints.DecimalMax
import jakarta.validation.constraints.DecimalMin
import jakarta.validation.constraints.Email
import jakarta.validation.constraints.Max
import jakarta.validation.constraints.Min
import jakarta.validation.constraints.NotNull
import jakarta.validation.constraints.Pattern
import jakarta.validation.constraints.Size
import jakarta.validation.Valid

import kotlin.collections.List
import kotlin.collections.Map

@RestController
@Validated
interface MessagesApi {

    @Operation(
        tags = ["messages",],
        summary = "メッセージ一覧取得",
        operationId = "apiMessagesGet",
        description = """指定したマッチのメッセージ一覧を取得します""",
        responses = [
            ApiResponse(responseCode = "200", description = "メッセージ一覧取得成功", content = [Content(array = ArraySchema(schema = Schema(implementation = Message::class)))]),
            ApiResponse(responseCode = "401", description = "未認証"),
            ApiResponse(responseCode = "403", description = "アクセス権限なし")
        ],
        security = [ SecurityRequirement(name = "basicAuth"),SecurityRequirement(name = "bearerAuth") ]
    )
    @RequestMapping(
            method = [RequestMethod.GET],
            value = ["/api/messages"],
            produces = ["application/json"]
    )
    fun apiMessagesGet(@NotNull @Parameter(description = "", required = true) @Valid @RequestParam(value = "matchId", required = true) matchId: kotlin.Long): ResponseEntity<List<Message>>

    @Operation(
        tags = ["messages",],
        summary = "メッセージ送信",
        operationId = "apiMessagesPost",
        description = """指定したマッチにメッセージを送信します""",
        responses = [
            ApiResponse(responseCode = "201", description = "メッセージ送信成功", content = [Content(schema = Schema(implementation = Message::class))]),
            ApiResponse(responseCode = "400", description = "入力エラー"),
            ApiResponse(responseCode = "401", description = "未認証"),
            ApiResponse(responseCode = "403", description = "アクセス権限なし")
        ],
        security = [ SecurityRequirement(name = "basicAuth"),SecurityRequirement(name = "bearerAuth") ]
    )
    @RequestMapping(
            method = [RequestMethod.POST],
            value = ["/api/messages"],
            produces = ["application/json"],
            consumes = ["application/json"]
    )
    fun apiMessagesPost(@Parameter(description = "", required = true) @Valid @RequestBody sendMessageRequest: SendMessageRequest): ResponseEntity<Message>
}
